<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <description>
        This file defines beans for the Password Manager extension.
    </description>
    
    <bean id="lookupSecurityQuestionAction" class="org.jasig.cas.pm.web.flow.LookupSecurityQuestionAction"
        p:customSecurityQuestionRequired="${ldap.pm.custom-question.required}"
        p:passwordManagerService-ref="ldapPasswordManagerService" />

    <bean id="checkSecurityQuestionResponseAction" class="org.jasig.cas.pm.web.flow.CheckSecurityQuestionResponseAction" 
        p:lockoutService-ref="lockoutService" />
    
    <bean id="processChangePasswordAction" class="org.jasig.cas.pm.web.flow.ProcessChangePasswordAction"
        p:passwordManagerService-ref="ldapPasswordManagerService" />
    
    <bean id="processSecurityQuestionSetupAction" class="org.jasig.cas.pm.web.flow.ProcessSecurityQuestionSetupAction"
        p:passwordManagerService-ref="ldapPasswordManagerService" />
        
    <bean id="recaptchaValidationAction" class="org.jasig.cas.pm.web.flow.RecaptchaValidationAction"
        p:recaptchaPublicKey="${ldap.pm.recaptcha.key.public}"
        p:recaptchaPrivateKey="${ldap.pm.recaptcha.key.private}"/>
        
    <!-- The following regex matches 8 or more characters, and must include
         at least one lowercase, one uppercase, and one digit. -->
    <bean id="changePasswordBeanValidator" class="org.jasig.cas.pm.web.flow.validator.ChangePasswordBeanValidator"
        p:passwordRegex="^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).*$"/>
    
    <!-- If there are too many invalid password reset attempts (allowedIncorrectAttempts),
         the user is prevented from changing his/her password for
         secondsUntilNextAllowedAttempt seconds. Default is 999999 (essentially disabled). -->
    <bean id="lockoutService" class="org.jasig.cas.pm.service.MemoryPasswordManagerLockoutService"
        p:allowedIncorrectAttempts="${ldap.pm.lockout.incorrect-attempts:999999}"
        p:secondsUntilNextAllowedAttempt="${ldap.pm.lockout.incorrect-attempts.lockout-seconds:0}"/>
    
    <bean id="ldapPasswordManagerService" class="org.jasig.cas.pm.service.LdapPasswordManagerService">
        <property name="ldapServers">
            <util:list>
                <ref bean="ldapServer"/>
                
            <!-- You can chain more LDAP servers here... just add additional
                 beans below.
                     
                <ref bean="ldapServer2"/>
                <ref bean="ldapServer3"/>
            -->
            
            </util:list>
        </property>
        <property name="lockoutService" ref="lockoutService" />
    </bean>
    
    <bean id="parentLdapServer" abstract="true" class="org.jasig.cas.pm.ldap.AbstractLdapServer">
        <property name="defaultQuestions">
            <util:list>
                <value>${ldap.pm.question.default.1}</value>
                <value>${ldap.pm.question.default.2}</value>
            </util:list>
        </property>
        <property name="defaultResponseAttrs">
            <util:list>
                <value>${ldap.pm.answer.attr.default.1}</value>
                <value>${ldap.pm.answer.attr.default.2}</value>
            </util:list>
        </property>
        <property name="securityQuestionAttrs">
            <util:list>
                <value>${ldap.pm.question.attr:}</value>
            </util:list>
        </property>
        <property name="securityResponseAttrs">
            <util:list>
                <value>${ldap.pm.answer.attr:}</value>
            </util:list>
        </property>
    </bean>
    
    <!-- Server class is either org.jasig.cas.pm.ldap.ActiveDirectoryLdapServer
         or org.jasig.cas.pm.ldap.OpenLdapLdapServer. -->
    <bean id="ldapServer" parent="parentLdapServer" class="${ldap.pm.server.class}">
        <property name="usernameAttr" value="${ldap.pm.username.attr}"/>
        <property name="passwordAttr" value="${ldap.pm.password.attr}"/>
        <property name="searchBase" value="${ldap.authentication.basedn}"/>
        <property name="description" value="${ldap.pm.server.description:}"/>
        <property name="ignorePartialResultException" value="${ldap.authentication.ignorePartialResultException}"/>
        <property name="ldapContextSource" ref="contextSource"/>
        <property name="filter" value="${ldap.authentication.filter}"/>
        
    <!-- OpenLDAP-specific property.  Uncomment if you want to encrypt your
         password field *and* you're not using Active Directory.
             
        <property name="encryptionAlgorithm" value="${pm.ldap.server.openldap.encryption-algorithm}"/>
    -->
    
    <!-- Active Directory-specific properties.  Uncomment if you are using
         Active Directory. -->
    
    <!-- 
        <property name="passwordWarnAgeDays" value="${pm.ldap.server.ad.password.warn.days}"/>
        <property name="maxPwdAgeAttribute" value="${pm.ldap.server.ad.attr.max-pwd-age}"/>
        <property name="uacAttribute" value="${pm.ldap.server.ad.attr.uac}"/>
        <property name="pwdLastSetAttribute" value="${pm.ldap.server.ad.attr.pwd-last-set}"/>
        <property name="timeBetweenMaxPwdAgeRefreshSeconds" value="${pm.ldap.server.ad.cache.value.max-pwd-age}"/> -->
    </bean>
</beans>

